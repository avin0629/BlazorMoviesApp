@page "/"
@page "/index"
@inject IMovieRepository movieRepository;

<div>
	<h3>In Theaters</h3>
	<MoviesList Movies="InTheaters" />
</div>
<div>
	<h3>Upcoming Releases</h3>
	<MoviesList Movies="UpcomingRelease" />
</div>

@*<CustomTypeahead SearchMethod="SearchMethod">
	<ResultTemplate>
		@context
	</ResultTemplate>
</CustomTypeahead>*@



@code{

	private MoviesList moviesList;


	private List<Movie> InTheaters;
	private List<Movie> UpcomingRelease;



	protected async override Task OnInitializedAsync()
	{
		var indexPageDTO = await this.movieRepository.GetIndexPageDTO();
		InTheaters = indexPageDTO.InTheaters;
		UpcomingRelease = indexPageDTO.UpcomingReleases;
	}

	
	private async Task<IEnumerable<string>> SearchMethod(string searchText)
	{
		await Task.Delay(2000);

		if (searchText == "test")
		{
			return Enumerable.Empty<string>();
		}
		else
		{
			return new List<string>() { "Avinash", "Soham" };
		}
	}
}
