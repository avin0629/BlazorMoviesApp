@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using System.Reflection
@inject LazyAssemblyLoader lazyLoader

<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true" OnNavigateAsync="OnNavigateAsync" AdditionalAssemblies="lazyLoadedAssemblies">
	<Found Context="routeData">
		<RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
	</Found>
	<NotFound>
		<LayoutView Layout="@typeof(MainLayout)">
			<CustomNotFound></CustomNotFound>
		</LayoutView>
	</NotFound>
</Router>

@code{

	private List<Assembly> lazyLoadedAssemblies = new List<Assembly>();

	private async Task OnNavigateAsync(NavigationContext args)
	{
		if (args.Path.EndsWith("counter"))
		{
			var assemblies = await lazyLoader.LoadAssembliesAsync(new List<string> { "MathNet.Numerics.dll" });
			lazyLoadedAssemblies.AddRange(assemblies);
		}
	}
}
